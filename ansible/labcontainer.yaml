- name: Setup service modules
  hosts:
    - core.zooclub.ru
  vars:
    services:
      oauth:
        uid: 3004
      redisc:
        uid: 3005
        data: /var/lib/redis-container
  tasks:
    - name: Create users
      ansible.builtin.user:
        name: "{{ item.key }}"
        comment: "{{ item.key }} service user"
        groups: contservice
        shell: /bin/bash
        uid: "{{ item.value.uid }}"
      loop: "{{ services | dict2items }}"
    - name: Create datadir
      ansible.builtin.file:
        name: "{{ item.value.data }}"
        state: directory
        mode: '0700'
        owner: "{{ item.value.uid }}"
      loop: "{{ services | dict2items }}"
      when: item.value.data is defined
    - name: Install oauth-proxy
      community.docker.docker_container:
        name: oauth-proxy
        image: quay.io/oauth2-proxy/oauth2-proxy:v7.5.1-amd64
        state: started
        restart_policy: "unless-stopped"
        env:
          OAUTH2_PROXY_COOKIE_SECRET: "zhNRcNNtMXnfiUaMJ4jwOWO4ZfpNcUkD3DpX0sdgNIg="
          OAUTH2_PROXY_CLIENT_ID: "{{ lookup('cloud.terraform.tf_output', 'application_id', project_path='../terraform') }}"
          OAUTH2_PROXY_CLIENT_SECRET: "{{ lookup('cloud.terraform.tf_output', 'client_secret', project_path='../terraform') }}"
          OAUTH2_PROXY_PROVIDER: "oidc"
          OAUTH2_PROXY_OIDC_ISSUER_URL: "https://login.microsoftonline.com/{{ lookup('cloud.terraform.tf_output', 'tenant_id', project_path='../terraform') }}/v2.0"
          OAUTH2_PROXY_USER_ID_CLAIM: "oid"
          OAUTH2_PROXY_SCOPE: "openid email profile"
          OAUTH2_PROXY_ALLOWED_GROUPS: "{{ lookup('cloud.terraform.tf_output', 'private_grp_id', project_path='../terraform') }}"
          OAUTH2_PROXY_EMAIL_DOMAINS: "*"
          OAUTH2_PROXY_REDIRECT_URL: "https://auth.prudnitskiy.pro/oauth2/callback"
          OAUTH2_PROXY_HTTP_ADDRESS: "0.0.0.0:4180"
          OAUTH2_PROXY_COOKIE_DOMAINS: "prudnitskiy.pro"
          OAUTH2_PROXY_WHITELIST_DOMAINS: "*.prudnitskiy.pro"
          OAUTH2_PROXY_SESSION_STORE_TYPE: "redis"
          OAUTH2_PROXY_REDIS_CONNECTION_URL: "redis://redis/1"
          OAUTH2_PROXY_COOKIE_SAMESITE: "lax"
          OAUTH2_PROXY_REVERSE_PROXY: "true"
          OAUTH2_PROXY_COOKIE_CSRF_PER_REQUEST: "true"
          OAUTH2_PROXY_COOKIE_CSRF_EXPIRE: "5m"
          OAUTH2_PROXY_SKIP_PROVIDER_BUTTON: "false"
          OAUTH2_PROXY_PASS_USER_HEADERS: "true"
          OAUTH2_PROXY_SET_XAUTHREQUEST: "true"
        cpus: 0.1
        memory: 128M
        user: "{{ services.oauth.uid }}"
        networks:
          - name: host_service
        published_ports:
          - 127.0.0.1:4180:4180
        container_default_behavior: no_defaults
    - name: Install redis
      community.docker.docker_container:
        name: redis
        image: redis:7.2.3-alpine3.18
        state: started
        restart_policy: "unless-stopped"
        volumes:
          - "{{ services.redisc.data }}:/data"
        cpus: 0.1
        memory: 128M
        user: "{{ services.redisc.uid }}"
        networks:
          - name: host_service
        container_default_behavior: no_defaults
    - name: Install auth config
      ansible.builtin.template:
        src: templates/auth.conf.j2
        dest: /etc/nginx/sites-enabled/auth.prudnitskiy.pro.conf
        owner: "root"
        mode: "0644"
    - name: Install vma config
      ansible.builtin.template:
        src: templates/mon.conf.j2
        dest: /etc/nginx/sites-enabled/mon.prudnitskiy.pro.conf
        owner: "root"
        mode: "0644"
